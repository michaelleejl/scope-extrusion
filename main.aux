\relax 
\providecommand\zref@newlabel[2]{}
\providecommand*\new@tpo@label[2]{}
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\providecommand\BKM@entry[2]{}
\bibstyle{abbrvnat}
\providecommand \oddpage@label [2]{}
\BKM@entry{id=1,dest={636861707465722E31},srcline={1}}{5C3337365C3337375C303030495C3030306E5C303030745C303030725C3030306F5C303030645C303030755C303030635C303030745C303030695C3030306F5C3030306E}
\citation{rice-53,robinson-01}
\citation{abrahams-04}
\citation{sheard-02}
\citation{huceke-memcpy}
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Introduction}{1}{chapter.1}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{lotypederivation}{\addvspace {10\p@ }}
\@writefile{lol}{\addvspace {10\p@ }}
\citation{kiselyov-14}
\citation{lawall-94}
\citation{kiselyov-14}
\citation{sivaramakrishnan-21}
\citation{pretnar-15}
\citation{kiselyov-16,isoda-24}
\citation{calcagno-00}
\citation{kiselyov-14}
\citation{xie-2022}
\BKM@entry{id=2,dest={73656374696F6E2E312E31},srcline={81}}{5C3337365C3337375C303030435C3030306F5C3030306E5C303030745C303030725C303030695C303030625C303030755C303030745C303030695C3030306F5C3030306E5C30303073}
\citation{kiselyov-14}
\citation{kiselyov-16}
\@writefile{toc}{\contentsline {section}{\numberline {1.1}Contributions}{3}{section.1.1}\protected@file@percent }
\BKM@entry{id=3,dest={636861707465722E32},srcline={3}}{5C3337365C3337375C303030425C303030615C303030635C3030306B5C303030675C303030725C3030306F5C303030755C3030306E5C30303064}
\BKM@entry{id=4,dest={73656374696F6E2E322E31},srcline={1}}{5C3337365C3337375C3030304D5C303030655C303030745C303030615C303030705C303030725C3030306F5C303030675C303030725C303030615C3030306D5C3030306D5C303030695C3030306E5C30303067}
\BKM@entry{id=5,dest={73756273656374696F6E2E322E312E31},srcline={4}}{}
\@writefile{toc}{\contentsline {chapter}{\numberline {2}Background}{4}{chapter.2}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{lotypederivation}{\addvspace {10\p@ }}
\@writefile{lol}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {2.1}Metaprogramming}{4}{section.2.1}\protected@file@percent }
\newlabel{section:metaprogramming-technical}{{2.1}{4}{Metaprogramming}{section.2.1}{}}
\newlabel{section:metaprogramming-technical@cref}{{[section][1][2]2.1}{[1][4][]4}{}{}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.1}Metaprogramming for Fast and Maintainable Code}{4}{subsection.2.1.1}\protected@file@percent }
\newlabel{subsection:metaprogramming-motivation}{{2.1.1}{4}{Metaprogramming for Fast and Maintainable Code}{subsection.2.1.1}{}}
\newlabel{subsection:metaprogramming-motivation@cref}{{[subsection][1][2,1]2.1.1}{[1][4][]4}{}{}{}}
\citation{tratt-2008}
\citation{yallop-2023}
\citation{servetto-2013}
\citation{wickham-2019}
\citation{vandebon-2021}
\citation{robinson-01}
\citation{jax-grad-metaprogramming}
\@writefile{lol}{\contentsline {listing}{\numberline {1}{\ignorespaces A maintainable implementation of \FVExtraRobustCommand \RobustMintInline \FVExtraAlwaysUnexpanded {\FVExtraUnexpandedReadStarOArgMArgBVArg {ocaml}{grad}}}}{5}{listing.1}\protected@file@percent }
\newlabel{listing:ocaml-grad-main}{{1}{5}{A maintainable implementation of \mintinline {ocaml}{grad}}{listing.1}{}}
\newlabel{listing:ocaml-grad-main@cref}{{[listing][1][]1}{[1][5][]5}{}{}{}}
\@writefile{lol}{\contentsline {listing}{\numberline {2}{\ignorespaces An implementation of \FVExtraRobustCommand \RobustMintInline \FVExtraAlwaysUnexpanded {\FVExtraUnexpandedReadStarOArgMArgBVArg {ocaml}{grad}}, specialised to \FVExtraRobustCommand \RobustMintInline \FVExtraAlwaysUnexpanded {\FVExtraUnexpandedReadStarOArgMArgBVArg {ocaml}{f}} $=2(x^2 + 2x) + 4$}}{5}{listing.2}\protected@file@percent }
\newlabel{listing:ocaml-grad-fast}{{2}{5}{An implementation of \mintinline {ocaml}{grad}, specialised to \mintinline {ocaml}{f} $=2(x^2 + 2x) + 4$}{listing.2}{}}
\newlabel{listing:ocaml-grad-fast@cref}{{[listing][2][]2}{[1][5][]5}{}{}{}}
\@writefile{toc}{\contentsline {subsubsection}{\nonumberline The Mechanics of Metaprogramming}{6}{subsubsection*.7}\protected@file@percent }
\@writefile{lol}{\contentsline {listing}{\numberline {3}{\ignorespaces A metaprogrammed \FVExtraRobustCommand \RobustMintInline \FVExtraAlwaysUnexpanded {\FVExtraUnexpandedReadStarOArgMArgBVArg {ocaml}{grad_gen}} function, which resembles \FVExtraRobustCommand \RobustMintInline \FVExtraAlwaysUnexpanded {\FVExtraUnexpandedReadStarOArgMArgBVArg {ocaml}{grad_main}} but generates a function resembling \FVExtraRobustCommand \RobustMintInline \FVExtraAlwaysUnexpanded {\FVExtraUnexpandedReadStarOArgMArgBVArg {ocaml}{grad_spec}}}}{6}{listing.3}\protected@file@percent }
\newlabel{listing:ocaml-pow-gen}{{3}{6}{A metaprogrammed \mintinline {ocaml}{grad_gen} function, which resembles \mintinline {ocaml}{grad_main} but generates a function resembling \mintinline {ocaml}{grad_spec}}{listing.3}{}}
\newlabel{listing:ocaml-pow-gen@cref}{{[listing][3][]3}{[1][6][]6}{}{}{}}
\BKM@entry{id=6,dest={73756273656374696F6E2E322E312E32},srcline={198}}{5C3337365C3337375C303030545C303030685C303030655C3030305C3034305C303030445C303030655C303030735C303030695C303030675C3030306E5C3030305C3034305C303030535C303030705C303030615C303030635C303030655C3030305C3034305C3030306F5C303030665C3030305C3034305C3030304D5C303030655C303030745C303030615C3030306C5C303030615C3030306E5C303030675C303030755C303030615C303030675C303030655C30303073}
\citation{kiselyov-2024}
\citation{xie-2023}
\citation{chiang-2024}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.2}The Design Space of Metalanguages}{8}{subsection.2.1.2}\protected@file@percent }
\newlabel{subsection:metaprogramming-design}{{2.1.2}{8}{The Design Space of Metalanguages}{subsection.2.1.2}{}}
\newlabel{subsection:metaprogramming-design@cref}{{[subsection][2][2,1]2.1.2}{[1][7][]8}{}{}{}}
\citation{inoue-2012}
\citation{isoda-24,kiselyov-16}
\BKM@entry{id=7,dest={73656374696F6E2E322E32},srcline={1}}{5C3337365C3337375C303030455C303030665C303030665C303030655C303030635C303030745C3030305C3034305C303030485C303030615C3030306E5C303030645C3030306C5C303030655C303030725C30303073}
\citation{pretnar-15}
\BKM@entry{id=8,dest={73756273656374696F6E2E322E322E31},srcline={4}}{5C3337365C3337375C303030435C3030306F5C3030306D5C303030705C3030306F5C303030735C303030615C303030625C3030306C5C303030655C3030305C3034305C303030615C3030306E5C303030645C3030305C3034305C303030435C303030755C303030735C303030745C3030306F5C3030306D5C303030695C303030735C303030615C303030625C3030306C5C303030655C3030305C3034305C303030455C303030665C303030665C303030655C303030635C303030745C30303073}
\citation{kiselyov-2012}
\citation{sivaramakrishnan-21}
\BKM@entry{id=9,dest={73756273656374696F6E2E322E322E32},srcline={59}}{5C3337365C3337375C3030304C5C303030615C3030306D5C303030625C303030645C303030615C3030302D5C3030304F5C303030705C3030303A5C3030305C3034305C303030415C3030305C3034305C303030435C303030615C3030306C5C303030635C303030755C3030306C5C303030755C303030735C3030305C3034305C303030665C3030306F5C303030725C3030305C3034305C303030455C303030665C303030665C303030655C303030635C303030745C3030305C3034305C303030485C303030615C3030306E5C303030645C3030306C5C303030655C303030725C30303073}
\citation{pretnar-15}
\@writefile{toc}{\contentsline {section}{\numberline {2.2}Effect Handlers}{9}{section.2.2}\protected@file@percent }
\newlabel{section:effects-technical}{{2.2}{9}{Effect Handlers}{section.2.2}{}}
\newlabel{section:effects-technical@cref}{{[section][2][2]2.2}{[1][9][]9}{}{}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.1}Composable and Customisable Effects}{9}{subsection.2.2.1}\protected@file@percent }
\newlabel{subsection:effect-handler-motivation}{{2.2.1}{9}{Composable and Customisable Effects}{subsection.2.2.1}{}}
\newlabel{subsection:effect-handler-motivation@cref}{{[subsection][1][2,2]2.2.1}{[1][9][]9}{}{}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.2}$\lambda _{\texttt  {op}}${}: A Calculus for Effect Handlers}{9}{subsection.2.2.2}\protected@file@percent }
\newlabel{subsection:effect-handler-calculus}{{2.2.2}{9}{\texorpdfstring {\efflang {}}{Lambda-Op}: A Calculus for Effect Handlers}{subsection.2.2.2}{}}
\newlabel{subsection:effect-handler-calculus@cref}{{[subsection][2][2,2]2.2.2}{[1][9][]9}{}{}{}}
\citation{pretnar-15}
\citation{pretnar-15}
\@writefile{lof}{\contentsline {figure}{\numberline {2.1}{\ignorespaces The syntax of $\lambda _{\texttt  {op}}$. Terms are syntactically divided into values $v$, computations $c$, and handlers $h$ }}{10}{figure.2.1}\protected@file@percent }
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:eff-lang-syntax}{{2.1}{10}{The syntax of \efflang . Terms are syntactically divided into values $v$, computations $c$, and handlers $h$}{figure.2.1}{}}
\newlabel{fig:eff-lang-syntax@cref}{{[figure][1][2]2.1}{[1][10][]10}{}{}{}}
\@writefile{lol}{\contentsline {listing}{\numberline {4}{\ignorespaces A $\lambda _{\texttt  {op}}${} program that returns $(\texttt  {3}, \texttt  {"1;2"})$. It is used as a running example throughout this section.}}{10}{listing.4}\protected@file@percent }
\newlabel{listing:efflang-running-example}{{4}{10}{A \efflang {} program that returns $(\texttt {3}, \texttt {"1;2"})$. It is used as a running example throughout this section}{listing.4}{}}
\newlabel{listing:efflang-running-example@cref}{{[listing][4][]4}{[1][10][]10}{}{}{}}
\@writefile{toc}{\contentsline {subsubsection}{\nonumberline Sequencing computations: \texttt  {do} and \texttt  {return}}{10}{subsubsection*.9}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\nonumberline Performing effects: \texttt  {op}, \texttt  {handle}, and \texttt  {continue}}{11}{subsubsection*.11}\protected@file@percent }
\citation{pretnar-15}
\citation{isoda-24}
\citation{pretnar-15}
\citation{pretnar-15}
\citation{felleisen-87}
\citation{kiselyov-2012}
\@writefile{toc}{\contentsline {subsubsection}{\nonumberline Operational Semantics}{12}{subsubsection*.13}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2.2}{\ignorespaces The operational semantics of $\lambda _{\texttt  {op}}$. The semantics is given on configurations of the form $\langle c; E \rangle $. Rules are divided into three classes: reduction rules $\textsc  {Red-}X$, which perform computation, congruence rules $\textsc  {Cng-}Y$ which manipulate the evaluation context, and effect rules $\textsc  {Eff-}Z$ that are special to $\lambda _{\texttt  {op}}${}.}}{13}{figure.2.2}\protected@file@percent }
\newlabel{fig:efflang-opsem}{{2.2}{13}{The operational semantics of \efflang . The semantics is given on configurations of the form $\langle c; E \rangle $. Rules are divided into three classes: reduction rules $\textsc {Red-}X$, which perform computation, congruence rules $\textsc {Cng-}Y$ which manipulate the evaluation context, and effect rules $\textsc {Eff-}Z$ that are special to \efflang {}}{figure.2.2}{}}
\newlabel{fig:efflang-opsem@cref}{{[figure][2][2]2.2}{[1][12][]13}{}{}{}}
\@writefile{toc}{\contentsline {subsubsection}{\nonumberline Type-and-Effect System}{14}{subsubsection*.15}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2.3}{\ignorespaces $\lambda _{\texttt  {op}}${} types. Notice that, just as terms are divided into values, computations, and handlers, types are divided into value types ($S, T$), computation types ($\effectType {T}$), and handler types ($\effectType [\Delta _1]{S} \DOTSB \Relbar \joinrel \Rightarrow \effectType [\Delta _2]{T}$)}}{15}{figure.2.3}\protected@file@percent }
\newlabel{fig:efflang-type-syntax}{{2.3}{15}{\efflang {} types. Notice that, just as terms are divided into values, computations, and handlers, types are divided into value types ($S, T$), computation types ($\effectType {T}$), and handler types ($\handlerType {\effectType [\Delta _1]{S}}{\effectType [\Delta _2]{T}}$)}{figure.2.3}{}}
\newlabel{fig:efflang-type-syntax@cref}{{[figure][3][2]2.3}{[1][14][]15}{}{}{}}
\citation{biernacki-2017}
\citation{pretnar-15}
\@writefile{lof}{\contentsline {figure}{\numberline {2.4}{\ignorespaces Typing rules for $\lambda _{\texttt  {op}}${} terms. Typing judgements are stratified into value, computation, and handler judgments.}}{17}{figure.2.4}\protected@file@percent }
\newlabel{fig:efflang-type-system}{{2.4}{17}{Typing rules for \efflang {} terms. Typing judgements are stratified into value, computation, and handler judgments}{figure.2.4}{}}
\newlabel{fig:efflang-type-system@cref}{{[figure][4][2]2.4}{[1][16][]17}{}{}{}}
\citation{bauer-2014}
\BKM@entry{id=10,dest={73756273656374696F6E2E322E322E33},srcline={626}}{5C3337365C3337375C303030545C303030685C303030655C3030305C3034305C303030445C303030655C303030735C303030695C303030675C3030306E5C3030305C3034305C303030535C303030705C303030615C303030635C303030655C3030305C3034305C3030306F5C303030665C3030305C3034305C303030455C303030665C303030665C303030655C303030635C303030745C3030305C3034305C303030485C303030615C3030306E5C303030645C3030306C5C303030655C303030725C30303073}
\zref@newlabel{mdf@pagelabel-1}{\default{2.2.2}\page{18}\abspage{24}\mdf@pagevalue{18}}
\@writefile{thm}{\contentsline {mddefinition}{{Definition}{2.2.{1}}{Well-typed closed computation}}{18}{mdtheorem.2.2.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\nonumberline Metatheory}{18}{subsubsection*.17}\protected@file@percent }
\zref@newlabel{mdf@pagelabel-2}{\default{2.2.2}\page{18}\abspage{24}\mdf@pagevalue{18}}
\@writefile{thm}{\contentsline {mdtheorem}{{Theorem}{2.2.{2}}{Progress}}{18}{mdtheorem.2.2.2}\protected@file@percent }
\newlabel{thm:progress}{{2.2.{2}}{18}{Metatheory}{mdtheorem.2.2.2}{}}
\newlabel{thm:progress@cref}{{[mdtheorem][2][2,2]2.2.{2}}{[1][18][]18}{}{}{}}
\zref@newlabel{mdf@pagelabel-3}{\default{2.2.2}\page{18}\abspage{24}\mdf@pagevalue{18}}
\@writefile{thm}{\contentsline {mdtheorem}{{Theorem}{2.2.{3}}{Preservation}}{18}{mdtheorem.2.2.3}\protected@file@percent }
\newlabel{thm:preservation}{{2.2.{3}}{18}{Metatheory}{mdtheorem.2.2.3}{}}
\newlabel{thm:preservation@cref}{{[mdtheorem][3][2,2]2.2.{3}}{[1][18][]18}{}{}{}}
\zref@newlabel{mdf@pagelabel-4}{\default{2.2.2}\page{18}\abspage{24}\mdf@pagevalue{18}}
\@writefile{thm}{\contentsline {mdcorollary}{{Corollary}{2.2.{4}}{Type Safety}}{18}{mdtheorem.2.2.4}\protected@file@percent }
\newlabel{thm:type-safety}{{2.2.{4}}{18}{Metatheory}{mdtheorem.2.2.4}{}}
\newlabel{thm:type-safety@cref}{{[mdtheorem][4][2,2]2.2.{4}}{[1][18][]18}{}{}{}}
\citation{xie-2022}
\citation{xie-2022}
\citation{isoda-24}
\citation{hillestrom-2018}
\citation{phipps-costin-2023}
\citation{isoda-24}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.3}The Design Space of Effect Handlers}{19}{subsection.2.2.3}\protected@file@percent }
\newlabel{subsection:effect-handler-design}{{2.2.3}{19}{The Design Space of Effect Handlers}{subsection.2.2.3}{}}
\newlabel{subsection:effect-handler-design@cref}{{[subsection][3][2,2]2.2.3}{[1][18][]19}{}{}{}}
\@writefile{lol}{\contentsline {listing}{\numberline {5}{\ignorespaces A $\lambda _{\texttt  {op}}${} program which contrasts deep, shallow, and sheep handlers}}{19}{listing.5}\protected@file@percent }
\newlabel{listing:eff-handler-type}{{5}{19}{A \efflang {} program which contrasts deep, shallow, and sheep handlers}{listing.5}{}}
\newlabel{listing:eff-handler-type@cref}{{[listing][5][]5}{[1][19][]19}{}{}{}}
\citation{phipps-costin-2023}
\BKM@entry{id=11,dest={73656374696F6E2E322E33},srcline={1}}{5C3337365C3337375C303030535C303030635C3030306F5C303030705C303030655C3030305C3034305C303030455C303030785C303030745C303030725C303030755C303030735C303030695C3030306F5C3030306E}
\citation{kiselyov-14,kiselyov-16}
\citation{kiselyov-16}
\citation{kiselyov-14}
\@writefile{lol}{\contentsline {listing}{\numberline {6}{\ignorespaces A $\lambda _{\texttt  {op}}${} program that resumes the same continuation multiple times}}{20}{listing.6}\protected@file@percent }
\newlabel{listing:eff-multishot}{{6}{20}{A \efflang {} program that resumes the same continuation multiple times}{listing.6}{}}
\newlabel{listing:eff-multishot@cref}{{[listing][6][]6}{[1][19][]20}{}{}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.3}Scope Extrusion}{20}{section.2.3}\protected@file@percent }
\newlabel{section:scope-extrusion-technical}{{2.3}{20}{Scope Extrusion}{section.2.3}{}}
\newlabel{section:scope-extrusion-technical@cref}{{[section][3][2]2.3}{[1][20][]20}{}{}{}}
\@writefile{lol}{\contentsline {listing}{\numberline {7}{\ignorespaces A $\lambda _{\texttt  {op}}${} program that evaluates to $\texttt  {Var}(x_{\mathbb  {N}})$. The AST is ill-scoped, and thus exhibits scope extrusion. It is used as a running example.}}{20}{listing.7}\protected@file@percent }
\newlabel{listing:efflang-scope-extrusion}{{7}{20}{A \efflang {} program that evaluates to $\Var {x}{\mathbb {N}}$. The AST is ill-scoped, and thus exhibits scope extrusion. It is used as a running example}{listing.7}{}}
\newlabel{listing:efflang-scope-extrusion@cref}{{[listing][7][]7}{[1][20][]20}{}{}{}}
\BKM@entry{id=12,dest={73756273656374696F6E2E322E332E31},srcline={59}}{}
\citation{kiselyov-16,isoda-24}
\citation{kiselyov-14}
\@writefile{lol}{\contentsline {listing}{\numberline {8}{\ignorespaces A $\lambda _{\texttt  {op}}${} program where the result of the program is well-scoped, but not all intermediate results are well-scoped.}}{21}{listing.8}\protected@file@percent }
\newlabel{listing:efflang-maybe-scope-extrusion}{{8}{21}{A \efflang {} program where the result of the program is well-scoped, but not all intermediate results are well-scoped}{listing.8}{}}
\newlabel{listing:efflang-maybe-scope-extrusion@cref}{{[listing][8][]8}{[1][21][]21}{}{}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.1}Existing Solutions to the Scope Extrusion Problem}{21}{subsection.2.3.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\nonumberline Lazy Dynamic Check}{21}{subsubsection*.19}\protected@file@percent }
\newlabel{subsubsection:lazy-dynamic-check}{{2.3.1}{21}{Lazy Dynamic Check}{subsubsection*.19}{}}
\newlabel{subsubsection:lazy-dynamic-check@cref}{{[subsection][1][2,3]2.3.1}{[1][21][]21}{}{}{}}
\@writefile{lol}{\contentsline {listing}{\numberline {9}{\ignorespaces A $\lambda _{\texttt  {op}}${} program that evaluates to $\texttt  {Var}(x_{\mathbb  {N}})$. Executing the entire program to determine if it exhibits scope extrusion is inefficient.}}{21}{listing.9}\protected@file@percent }
\newlabel{listing:efflang-lazy-scope-extrusion-inefficient}{{9}{21}{A \efflang {} program that evaluates to $\Var {x}{\mathbb {N}}$. Executing the entire program to determine if it exhibits scope extrusion is inefficient}{listing.9}{}}
\newlabel{listing:efflang-lazy-scope-extrusion-inefficient@cref}{{[listing][9][]9}{[1][21][]21}{}{}{}}
\citation{kiselyov-14}
\citation{kiselyov-14}
\citation{kiselyov-14}
\@writefile{toc}{\contentsline {subsubsection}{\nonumberline Eager Dynamic Check}{22}{subsubsection*.21}\protected@file@percent }
\newlabel{subsubsection:eager-dynamic-check}{{2.3.1}{22}{Eager Dynamic Check}{subsubsection*.21}{}}
\newlabel{subsubsection:eager-dynamic-check@cref}{{[subsection][1][2,3]2.3.1}{[1][22][]22}{}{}{}}
\@writefile{lol}{\contentsline {listing}{\numberline {10}{\ignorespaces A $\lambda _{\texttt  {op}}${} program that is a slight variation of \Cref  {listing:efflang-maybe-scope-extrusion}, but that (unlike \Cref  {listing:efflang-maybe-scope-extrusion}) fails the eager dynamic check.}}{22}{listing.10}\protected@file@percent }
\newlabel{listing:efflang-maybe-not-scope-extrusion}{{10}{22}{A \efflang {} program that is a slight variation of \Cref {listing:efflang-maybe-scope-extrusion}, but that (unlike \Cref {listing:efflang-maybe-scope-extrusion}) fails the eager dynamic check}{listing.10}{}}
\newlabel{listing:efflang-maybe-not-scope-extrusion@cref}{{[listing][10][]10}{[1][22][]22}{}{}{}}
\@writefile{toc}{\contentsline {subsubsection}{\nonumberline Refined Environment Classifiers}{22}{subsubsection*.23}\protected@file@percent }
\newlabel{subsubsection:refined-environment-classifiers}{{2.3.1}{22}{Refined Environment Classifiers}{subsubsection*.23}{}}
\newlabel{subsubsection:refined-environment-classifiers@cref}{{[subsection][1][2,3]2.3.1}{[1][22][]22}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.5}{\ignorespaces The AST of $(\lambda f. \lambda x. f x) (\lambda y.y)$, where each scope is labelled with the corresponding environment classifier.}}{23}{figure.2.5}\protected@file@percent }
\newlabel{fig:refined-enviroment-classifiers-basic}{{2.5}{23}{The AST of $(\lambda f. \lambda x. f x) (\lambda y.y)$, where each scope is labelled with the corresponding environment classifier}{figure.2.5}{}}
\newlabel{fig:refined-enviroment-classifiers-basic@cref}{{[figure][5][2]2.5}{[1][23][]23}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.6}{\ignorespaces Visual depiction of the \textsc  {C-Abs} typing rule.}}{25}{figure.2.6}\protected@file@percent }
\newlabel{fig:cref-typing-rule}{{2.6}{25}{Visual depiction of the \textsc {C-Abs} typing rule}{figure.2.6}{}}
\newlabel{fig:cref-typing-rule@cref}{{[figure][6][2]2.6}{[1][24][]25}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.7}{\ignorespaces The ``AST'' of the scope extrusion example, \Cref  {listing:efflang-scope-extrusion}. In place of AST nodes, we may now have compile-time executable programs that \textit  {evaluate} to AST nodes.}}{25}{figure.2.7}\protected@file@percent }
\newlabel{fig:classifier-ast-scope-extrusion}{{2.7}{25}{The ``AST'' of the scope extrusion example, \Cref {listing:efflang-scope-extrusion}. In place of AST nodes, we may now have compile-time executable programs that \textit {evaluate} to AST nodes}{figure.2.7}{}}
\newlabel{fig:classifier-ast-scope-extrusion@cref}{{[figure][7][2]2.7}{[1][24][]25}{}{}{}}
\@writefile{lol}{\contentsline {listing}{\numberline {11}{\ignorespaces A $\lambda _{\texttt  {op}}${} program that passes the eager and lazy dynamic checks, but is not well-typed under the refined environment classifiers type system.}}{25}{listing.11}\protected@file@percent }
\newlabel{listing:efflang-no-scope-extrusion}{{11}{25}{A \efflang {} program that passes the eager and lazy dynamic checks, but is not well-typed under the refined environment classifiers type system}{listing.11}{}}
\newlabel{listing:efflang-no-scope-extrusion@cref}{{[listing][11][]11}{[1][25][]25}{}{}{}}
\BKM@entry{id=13,dest={636861707465722E33},srcline={3}}{5C3337365C3337375C303030435C303030615C3030306C5C303030635C303030755C3030306C5C303030755C30303073}
\citation{xie-2023}
\citation{calcagno-2003}
\BKM@entry{id=14,dest={73656374696F6E2E332E31},srcline={45}}{5C3337365C3337375C303030545C303030685C303030655C3030305C3034305C303030535C3030306F5C303030755C303030725C303030635C303030655C3030305C3034305C3030304C5C303030615C3030306E5C303030675C303030755C303030615C303030675C303030655C3030303A5C3030305C3034305C3030304C5C303030615C3030306D5C303030625C303030645C303030615C3030302D5C3030304F5C303030705C3030302D5C303030515C303030755C3030306F5C303030745C303030655C3030302D5C303030535C303030705C3030306C5C303030695C303030635C30303065}
\@writefile{toc}{\contentsline {chapter}{\numberline {3}Calculus}{26}{chapter.3}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{lotypederivation}{\addvspace {10\p@ }}
\@writefile{lol}{\addvspace {10\p@ }}
\newlabel{chapter:calculus}{{3}{26}{Calculus}{chapter.3}{}}
\newlabel{chapter:calculus@cref}{{[chapter][3][]3}{[1][26][]26}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.1}{\ignorespaces $\lambda _{\equote [\texttt  {op}]}${} is first elaborated into $\lambda _{\texttt  {AST}(\texttt  {op})}${}, which is then executed \textbf  {at compile-time} to obtain the AST of a run-time $\lambda _{\texttt  {op}}${} program.}}{26}{figure.3.1}\protected@file@percent }
\newlabel{fig:elaboration-then-execution}{{3.1}{26}{\calculusName {} is first elaborated into \coreLang {}, which is then executed \textbf {at compile-time} to obtain the AST of a run-time \efflang {} program}{figure.3.1}{}}
\newlabel{fig:elaboration-then-execution@cref}{{[figure][1][3]3.1}{[1][26][]26}{}{}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.1}The Source Language: $\lambda _{\equote [\texttt  {op}]}${}}{26}{section.3.1}\protected@file@percent }
\newlabel{section:source-lang}{{3.1}{26}{The Source Language: \texorpdfstring {\sourceLang {}}{Lambda-Op-Quote-Splice}}{section.3.1}{}}
\newlabel{section:source-lang@cref}{{[section][1][3]3.1}{[1][26][]26}{}{}{}}
\BKM@entry{id=15,dest={73756273656374696F6E2E332E312E31},srcline={65}}{5C3337365C3337375C303030545C303030795C303030705C303030655C3030305C3034305C303030535C303030795C303030735C303030745C303030655C3030306D}
\@writefile{lof}{\contentsline {figure}{\numberline {3.2}{\ignorespaces $\lambda _{\equote [\texttt  {op}]}${} syntax. The syntax is broadly the same as $\lambda _{\texttt  {op}}${}, except with the addition of quotes and splices, and the removal of the continuation term former $\kappa x.e$.}}{27}{figure.3.2}\protected@file@percent }
\newlabel{fig:source-syntax}{{3.2}{27}{\sourceLang {} syntax. The syntax is broadly the same as \efflang {}, except with the addition of quotes and splices, and the removal of the continuation term former $\kappa x.e$}{figure.3.2}{}}
\newlabel{fig:source-syntax@cref}{{[figure][2][3]3.2}{[1][26][]27}{}{}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1.1}Type System}{27}{subsection.3.1.1}\protected@file@percent }
\newlabel{subsection:sourcelang-type-system}{{3.1.1}{27}{Type System}{subsection.3.1.1}{}}
\newlabel{subsection:sourcelang-type-system@cref}{{[subsection][1][3,1]3.1.1}{[1][27][]27}{}{}{}}
\zref@newlabel{mdf@pagelabel-5}{\default{3.1.1}\page{27}\abspage{33}\mdf@pagevalue{27}}
\@writefile{thm}{\contentsline {mddefinition}{{Definition}{3.1.{1}}{Level}}{27}{mdtheorem.3.1.1}\protected@file@percent }
\newlabel{dfn:level}{{3.1.{1}}{27}{Type System}{mdtheorem.3.1.1}{}}
\newlabel{dfn:level@cref}{{[definition][1][3,1]3.1.{1}}{[1][27][]27}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.3}{\ignorespaces $\lambda _{\equote [\texttt  {op}]}${} types. Types are stratified into two levels, $0$ and $-1$. Similarly, effects are stratified into two levels, $\xi $ (run-time) and $\Delta $ (compile-time). The \textsf  {Code} type allows compile-time programs to manipulate ASTs of run-time code.}}{28}{figure.3.3}\protected@file@percent }
\newlabel{fig:source-types}{{3.3}{28}{\sourceLang {} types. Types are stratified into two levels, $0$ and $-1$. Similarly, effects are stratified into two levels, $\xi $ (run-time) and $\Delta $ (compile-time). The \textsf {Code} type allows compile-time programs to manipulate ASTs of run-time code}{figure.3.3}{}}
\newlabel{fig:source-types@cref}{{[figure][3][3]3.3}{[1][27][]28}{}{}{}}
\citation{xie-2023}
\@writefile{toc}{\contentsline {subsubsection}{\nonumberline Typing Judgements}{30}{subsubsection*.25}\protected@file@percent }
\@writefile{lot}{\contentsline {table}{\numberline {3.1}{\ignorespaces The nine $\lambda _{\equote [\texttt  {op}]}${} typing judgements}}{30}{table.3.1}\protected@file@percent }
\newlabel{table:typing-judgements}{{3.1}{30}{The nine \sourceLang {} typing judgements}{table.3.1}{}}
\newlabel{table:typing-judgements@cref}{{[table][1][3]3.1}{[1][30][]30}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.4}{\ignorespaces A metaprogram annotated with compiler modes}}{30}{figure.3.4}\protected@file@percent }
\newlabel{fig:the-need-for-modes}{{3.4}{30}{A metaprogram annotated with compiler modes}{figure.3.4}{}}
\newlabel{fig:the-need-for-modes@cref}{{[figure][4][3]3.4}{[1][30][]30}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.5}{\ignorespaces Transitions between modes \textbf  {\textsf  {\textcolor {compile}{c}}}{}, \textbf  {\textsf  {\textcolor {splice}{s}}}{}, and \textbf  {\textsf  {\textcolor {quote}{q}}}{}. Top-level splices transition from \textbf  {\textsf  {\textcolor {compile}{c}}}{} to \textbf  {\textsf  {\textcolor {splice}{s}}}{}, quotes transition from \textbf  {\textsf  {\textcolor {splice}{s}}}{} to \textbf  {\textsf  {\textcolor {quote}{q}}}{}, and splices (under quotes) transition from \textbf  {\textsf  {\textcolor {quote}{q}}}{} to \textbf  {\textsf  {\textcolor {splice}{s}}}{}.}}{31}{figure.3.5}\protected@file@percent }
\newlabel{fig:compiler-mode-transitions}{{3.5}{31}{Transitions between modes \compilemode {}, \splicemode {}, and \quotemode {}. Top-level splices transition from \compilemode {} to \splicemode {}, quotes transition from \splicemode {} to \quotemode {}, and splices (under quotes) transition from \quotemode {} to \splicemode {}}{figure.3.5}{}}
\newlabel{fig:compiler-mode-transitions@cref}{{[figure][5][3]3.5}{[1][31][]31}{}{}{}}
\BKM@entry{id=16,dest={73656374696F6E2E332E32},srcline={574}}{5C3337365C3337375C303030545C303030685C303030655C3030305C3034305C303030435C3030306F5C303030725C303030655C3030305C3034305C3030304C5C303030615C3030306E5C303030675C303030755C303030615C303030675C303030655C3030303A5C3030305C3034305C3030304C5C303030615C3030306D5C303030625C303030645C303030615C3030302D5C3030304F5C303030705C3030302D5C303030415C303030535C30303054}
\citation{calcagno-2003}
\citation{calcagno-2003}
\zref@newlabel{mdf@pagelabel-6}{\default{3.1.1}\page{32}\abspage{38}\mdf@pagevalue{32}}
\@writefile{thm}{\contentsline {mddefinition}{{Definition}{3.1.{2}}{Well-typed closed expression}}{32}{mdtheorem.3.1.2}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {3.2}The Core Language: $\lambda _{\texttt  {AST}(\texttt  {op})}${}}{32}{section.3.2}\protected@file@percent }
\newlabel{section:core-lang}{{3.2}{32}{The Core Language: \texorpdfstring {\coreLang {}}{Lambda-Op-AST}}{section.3.2}{}}
\newlabel{section:core-lang@cref}{{[section][2][3]3.2}{[1][32][]32}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.6}{\ignorespaces The \textbf  {\textsf  {\textcolor {compile}{c}}}{}-mode and \textbf  {\textsf  {\textcolor {quote}{q}}}{}-mode typing rules for $\lambda _{\equote [\texttt  {op}]}${}. The rules are nearly identical to the $\lambda _{\texttt  {op}}${} typing rules. Two additional rules, \textsc  {(\textbf  {\textsf  {\textcolor {compile}{c}}}{}-Splice)} (top-level splice) and \textsc  {(\textbf  {\textsf  {\textcolor {quote}{q}}}{}-Splice)} formalise the transition to \textbf  {\textsf  {\textcolor {splice}{s}}}{}-mode.}}{33}{figure.3.6}\protected@file@percent }
\newlabel{fig:source-cq-typing-rules}{{3.6}{33}{The \compilemode {}-mode and \quotemode {}-mode typing rules for \sourceLang {}. The rules are nearly identical to the \efflang {} typing rules. Two additional rules, \textsc {(\compilemode {}-Splice)} (top-level splice) and \textsc {(\quotemode {}-Splice)} formalise the transition to \splicemode {}-mode}{figure.3.6}{}}
\newlabel{fig:source-cq-typing-rules@cref}{{[figure][6][3]3.6}{[1][32][]33}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3.7}{\ignorespaces The \textbf  {\textsf  {\textcolor {splice}{s}}}{}-mode typing rules for $\lambda _{\equote [\texttt  {op}]}${}. The rules (sans levels) are identical to the $\lambda _{\texttt  {op}}${} typing rules. The additional \textsc  {\textbf  {\textsf  {\textcolor {splice}{s}}}{}-Quote} rule makes level $0$ code available at compile-time. }}{34}{figure.3.7}\protected@file@percent }
\newlabel{fig:source-s-typing-rules}{{3.7}{34}{The \splicemode {}-mode typing rules for \sourceLang {}. The rules (sans levels) are identical to the \efflang {} typing rules. The additional \textsc {\splicemode {}-Quote} rule makes level $0$ code available at compile-time}{figure.3.7}{}}
\newlabel{fig:source-s-typing-rules@cref}{{[figure][7][3]3.7}{[1][32][]34}{}{}{}}
\citation{taha-1999}
\citation{taha-1999}
\@writefile{lol}{\contentsline {listing}{\numberline {12}{\ignorespaces An example $\lambda _{\equote [\texttt  {op}]}${} program which illustrates the need for \textbf  {\texttt  {mkvar}}}}{35}{listing.12}\protected@file@percent }
\newlabel{listing:source-gensym}{{12}{35}{An example \sourceLang {} program which illustrates the need for \textbf {\texttt {mkvar}}}{listing.12}{}}
\newlabel{listing:source-gensym@cref}{{[listing][12][]12}{[1][35][]35}{}{}{}}
\BKM@entry{id=17,dest={73756273656374696F6E2E332E322E31},srcline={678}}{5C3337365C3337375C3030304F5C303030705C303030655C303030725C303030615C303030745C303030695C3030306F5C3030306E5C303030615C3030306C5C3030305C3034305C303030535C303030655C3030306D5C303030615C3030306E5C303030745C303030695C303030635C30303073}
\@writefile{lof}{\contentsline {figure}{\numberline {3.8}{\ignorespaces $\lambda _{\texttt  {AST}(\texttt  {op})}${} syntax. The syntax extends $\lambda _{\texttt  {op}}${} with a (countably finite) class of (type-annotated) formal parameters, AST constructors and scope extrusion checking machinery.}}{36}{figure.3.8}\protected@file@percent }
\newlabel{fig:core-syntax}{{3.8}{36}{\coreLang {} syntax. The syntax extends \efflang {} with a (countably finite) class of (type-annotated) formal parameters, AST constructors and scope extrusion checking machinery}{figure.3.8}{}}
\newlabel{fig:core-syntax@cref}{{[figure][8][3]3.8}{[1][36][]36}{}{}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.1}Operational Semantics}{36}{subsection.3.2.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\nonumberline Configurations}{36}{subsubsection*.27}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {3.9}{\ignorespaces Selected rules of the $\lambda _{\texttt  {AST}(\texttt  {op})}${} operational semantics. Many of the rules can be trivially adapted from the $\lambda _{\texttt  {op}}${} semantics (\Cref  {fig:efflang-opsem}). The muting and unmuting of variables is complex, and explained in \Cref  {section:best-effort-check}. For now, these mechanisms are \textbf  {\textcolor {coreHighlight}{highlighted}}.}}{37}{figure.3.9}\protected@file@percent }
\newlabel{fig:corelang-opsem}{{3.9}{37}{Selected rules of the \coreLang {} operational semantics. Many of the rules can be trivially adapted from the \efflang {} semantics (\Cref {fig:efflang-opsem}). The muting and unmuting of variables is complex, and explained in \Cref {section:best-effort-check}. For now, these mechanisms are \textbf {\textcolor {coreHighlight}{highlighted}}}{figure.3.9}{}}
\newlabel{fig:corelang-opsem@cref}{{[figure][9][3]3.9}{[1][36][]37}{}{}{}}
\@writefile{toc}{\contentsline {subsubsection}{\nonumberline AST Rule}{37}{subsubsection*.29}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\nonumberline Scope Extrusion Checking Rules}{37}{subsubsection*.31}\protected@file@percent }
\citation{kiselyov-2024}
\BKM@entry{id=18,dest={73756273656374696F6E2E332E322E32},srcline={781}}{5C3337365C3337375C303030545C303030795C303030705C303030655C3030305C3034305C303030535C303030795C303030735C303030745C303030655C3030306D}
\zref@newlabel{mdf@pagelabel-7}{\default{3.2.1}\page{38}\abspage{44}\mdf@pagevalue{38}}
\@writefile{thm}{\contentsline {mddefinition}{{Definition}{3.2.{1}}{Declared Safe}}{38}{mdtheorem.3.2.1}\protected@file@percent }
\newlabel{dfn:declared-safe}{{3.2.{1}}{38}{Scope Extrusion Checking Rules}{mdtheorem.3.2.1}{}}
\newlabel{dfn:declared-safe@cref}{{[definition][1][3,2]3.2.{1}}{[1][38][]38}{}{}{}}
\citation{scherer-2017}
\BKM@entry{id=19,dest={73756273656374696F6E2E332E322E33},srcline={907}}{5C3337365C3337375C303030495C3030306D5C303030705C3030306C5C303030655C3030306D5C303030655C3030306E5C303030745C303030615C303030745C303030695C3030306F5C3030306E}
\@writefile{lof}{\contentsline {figure}{\numberline {3.10}{\ignorespaces The types of $\lambda _{\texttt  {AST}(\texttt  {op})}${}. $\lambda _{\texttt  {AST}(\texttt  {op})}${} types extend $\lambda _{\texttt  {op}}${} types with an \textsf  {AST} type (for ASTs), and an \textsf  {FParam} type}}{39}{figure.3.10}\protected@file@percent }
\newlabel{fig:core-types}{{3.10}{39}{The types of \coreLang {}. \coreLang {} types extend \efflang {} types with an \textsf {AST} type (for ASTs), and an \textsf {FParam} type}{figure.3.10}{}}
\newlabel{fig:core-types@cref}{{[figure][10][3]3.10}{[1][38][]39}{}{}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.2}Type System}{39}{subsection.3.2.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsubsection}{\nonumberline Typing Rules}{39}{subsubsection*.33}\protected@file@percent }
\zref@newlabel{mdf@pagelabel-8}{\default{3.2.2}\page{39}\abspage{45}\mdf@pagevalue{39}}
\@writefile{thm}{\contentsline {mddefinition}{{Definition}{3.2.{2}}{Well-typed closed term}}{39}{mdtheorem.3.2.2}\protected@file@percent }
\BKM@entry{id=20,dest={73656374696F6E2E332E33},srcline={921}}{5C3337365C3337375C303030455C3030306C5C303030615C303030625C3030306F5C303030725C303030615C303030745C303030695C3030306F5C3030306E5C3030305C3034305C303030665C303030725C3030306F5C3030306D5C3030305C3034305C3030304C5C303030615C3030306D5C303030625C303030645C303030615C3030302D5C3030304F5C303030705C3030302D5C303030515C303030755C3030306F5C303030745C303030655C3030302D5C303030535C303030705C3030306C5C303030695C303030635C303030655C3030305C3034305C303030745C3030306F5C3030305C3034305C3030304C5C303030615C3030306D5C303030625C303030645C303030615C3030302D5C3030304F5C303030705C3030302D5C303030415C303030535C30303054}
\@writefile{lof}{\contentsline {figure}{\numberline {3.11}{\ignorespaces Selected $\lambda _{\texttt  {AST}(\texttt  {op})}${} typing rules}}{40}{figure.3.11}\protected@file@percent }
\newlabel{fig:core-typing-rules}{{3.11}{40}{Selected \coreLang {} typing rules}{figure.3.11}{}}
\newlabel{fig:core-typing-rules@cref}{{[figure][11][3]3.11}{[1][39][]40}{}{}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.3}Implementation}{40}{subsection.3.2.3}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {3.3}Elaboration from $\lambda _{\equote [\texttt  {op}]}${} to $\lambda _{\texttt  {AST}(\texttt  {op})}${}}{40}{section.3.3}\protected@file@percent }
\newlabel{section:elaboration}{{3.3}{40}{Elaboration from \texorpdfstring {\sourceLang {}}{Lambda-Op-Quote-Splice} to \texorpdfstring {\coreLang {}}{Lambda-Op-AST}}{section.3.3}{}}
\newlabel{section:elaboration@cref}{{[section][3][3]3.3}{[1][40][]40}{}{}{}}
\BKM@entry{id=21,dest={73756273656374696F6E2E332E332E31},srcline={932}}{5C3337365C3337375C303030455C3030306C5C303030615C303030625C3030306F5C303030725C303030615C303030745C303030695C3030306E5C303030675C3030305C3034305C303030455C303030665C303030665C303030655C303030635C303030745C3030305C3034305C303030525C3030306F5C303030775C30303073}
\BKM@entry{id=22,dest={73756273656374696F6E2E332E332E32},srcline={939}}{5C3337365C3337375C303030455C3030306C5C303030615C303030625C3030306F5C303030725C303030615C303030745C303030695C3030306E5C303030675C3030305C3034305C303030545C303030795C303030705C303030655C30303073}
\BKM@entry{id=23,dest={73756273656374696F6E2E332E332E33},srcline={961}}{5C3337365C3337375C303030455C3030306C5C303030615C303030625C3030306F5C303030725C303030615C303030745C303030695C3030306E5C303030675C3030305C3034305C303030435C3030306F5C3030306E5C303030745C303030655C303030785C303030745C30303073}
\BKM@entry{id=24,dest={73756273656374696F6E2E332E332E34},srcline={973}}{5C3337365C3337375C303030455C3030306C5C303030615C303030625C3030306F5C303030725C303030615C303030745C303030695C3030306E5C303030675C3030305C3034305C303030545C303030655C303030725C3030306D5C30303073}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.1}Elaborating Effect Rows}{41}{subsection.3.3.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.2}Elaborating Types}{41}{subsection.3.3.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.3}Elaborating Contexts}{41}{subsection.3.3.3}\protected@file@percent }
\citation{calcagno-2003}
\citation{calcagno-2003}
\BKM@entry{id=25,dest={73756273656374696F6E2E332E332E35},srcline={1035}}{5C3337365C3337375C303030455C3030306C5C303030615C303030625C3030306F5C303030725C303030615C303030745C303030695C3030306E5C303030675C3030305C3034305C303030545C303030795C303030705C303030695C3030306E5C303030675C3030305C3034305C3030304A5C303030755C303030645C303030675C303030655C3030306D5C303030655C3030306E5C303030745C30303073}
\@writefile{lof}{\contentsline {figure}{\numberline {3.12}{\ignorespaces Selected term elaboration rules from $\lambda _{\equote [\texttt  {op}]}${} to $\lambda _{\texttt  {AST}(\texttt  {op})}${}. Term elaboration is very similar to \citet  {calcagno-2003}, adapted for compile-time generation with top-level splices, and modes rather than levels. Elaboration is moderated by the compiler mode. In \textbf  {\textsf  {\textcolor {compile}{c}}}{} and \textbf  {\textsf  {\textcolor {quote}{q}}}{}, elaboration builds ASTs. In \textbf  {\textsf  {\textcolor {splice}{s}}}{}-mode, elaboration is effectively the identity. }}{42}{figure.3.12}\protected@file@percent }
\newlabel{fig:term-elaboration}{{3.12}{42}{Selected term elaboration rules from \sourceLang {} to \coreLang {}. Term elaboration is very similar to \citet {calcagno-2003}, adapted for compile-time generation with top-level splices, and modes rather than levels. Elaboration is moderated by the compiler mode. In \compilemode {} and \quotemode {}, elaboration builds ASTs. In \splicemode {}-mode, elaboration is effectively the identity}{figure.3.12}{}}
\newlabel{fig:term-elaboration@cref}{{[figure][12][3]3.12}{[1][42][]42}{}{}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.4}Elaborating Terms}{42}{subsection.3.3.4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.5}Elaborating Typing Judgements}{42}{subsection.3.3.5}\protected@file@percent }
\newlabel{subsection:typing-judgement-elaboration}{{3.3.5}{42}{Elaborating Typing Judgements}{subsection.3.3.5}{}}
\newlabel{subsection:typing-judgement-elaboration@cref}{{[subsection][5][3,3]3.3.5}{[1][42][]42}{}{}{}}
\BKM@entry{id=26,dest={73656374696F6E2E332E34},srcline={1056}}{5C3337365C3337375C3030304D5C303030655C303030745C303030615C303030745C303030685C303030655C3030306F5C303030725C30303079}
\@writefile{lotypederivation}{\contentsline {typederivation}{\numberline {3.1}{\ignorespaces The elaborated derivation of $\ctypejudge {\lambda x. e}{\functionType [\xi ]{S}{T}}$}}{43}{typederivation.3.1}\protected@file@percent }
\newlabel{derivation:elaborated}{{3.1}{43}{The elaborated derivation of $\ctypejudge {\lambda x. e}{\functionType [\xi ]{S}{T}}$}{typederivation.3.1}{}}
\newlabel{derivation:elaborated@cref}{{[typederivation][1][3]3.1}{[1][43][]43}{}{}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3.4}Metatheory}{43}{section.3.4}\protected@file@percent }
\newlabel{section:metatheory}{{3.4}{43}{Metatheory}{section.3.4}{}}
\newlabel{section:metatheory@cref}{{[section][4][3]3.4}{[1][43][]43}{}{}{}}
\zref@newlabel{mdf@pagelabel-9}{\default{3.4}\page{43}\abspage{49}\mdf@pagevalue{43}}
\@writefile{thm}{\contentsline {mdtheorem}{{Theorem}{3.4.{1}}{Elaboration Preservation}}{43}{mdtheorem.3.4.1}\protected@file@percent }
\zref@newlabel{mdf@pagelabel-10}{\default{3.4}\page{43}\abspage{49}\mdf@pagevalue{43}}
\@writefile{thm}{\contentsline {mdtheorem}{{Theorem}{3.4.{2}}{Progress}}{43}{mdtheorem.3.4.2}\protected@file@percent }
\zref@newlabel{mdf@pagelabel-11}{\default{3.4}\page{44}\abspage{50}\mdf@pagevalue{44}}
\@writefile{thm}{\contentsline {mdtheorem}{{Theorem}{3.4.{3}}{Reduction Preservation}}{44}{mdtheorem.3.4.3}\protected@file@percent }
\zref@newlabel{mdf@pagelabel-12}{\default{3.4}\page{44}\abspage{50}\mdf@pagevalue{44}}
\@writefile{thm}{\contentsline {mdcorollary}{{Corollary}{3.4.{4}}{Type Safety}}{44}{mdtheorem.3.4.4}\protected@file@percent }
\newlabel{cor:core-type-safety}{{3.4.{4}}{44}{Metatheory}{mdtheorem.3.4.4}{}}
\newlabel{cor:core-type-safety@cref}{{[corollary][4][3,4]3.4.{4}}{[1][44][]44}{}{}{}}
\zref@newlabel{mdf@pagelabel-13}{\default{3.4}\page{44}\abspage{50}\mdf@pagevalue{44}}
\@writefile{thm}{\contentsline {mdtheorem}{{Theorem}{3.4.{5}}{Quote-Splice Duality}}{44}{mdtheorem.3.4.5}\protected@file@percent }
\newlabel{thm:quote-splice-duality}{{3.4.{5}}{44}{Metatheory}{mdtheorem.3.4.5}{}}
\newlabel{thm:quote-splice-duality@cref}{{[mdtheorem][5][3,4]3.4.{5}}{[1][44][]44}{}{}{}}
\BKM@entry{id=27,dest={636861707465722E34},srcline={3}}{5C3337365C3337375C303030535C303030635C3030306F5C303030705C303030655C3030305C3034305C303030455C303030785C303030745C303030725C303030755C303030735C303030695C3030306F5C3030306E}
\citation{kiselyov-14}
\citation{kiselyov-16}
\citation{kiselyov-16}
\citation{isoda-24}
\BKM@entry{id=28,dest={73656374696F6E2E342E31},srcline={14}}{5C3337365C3337375C303030505C303030725C3030306F5C303030705C303030655C303030725C303030745C303030695C303030655C303030735C3030305C3034305C3030306F5C303030665C3030305C3034305C303030445C303030795C3030306E5C303030615C3030306D5C303030695C303030635C3030305C3034305C303030535C303030635C3030306F5C303030705C303030655C3030305C3034305C303030455C303030785C303030745C303030725C303030755C303030735C303030695C3030306F5C3030306E5C3030305C3034305C303030435C303030685C303030655C303030635C3030306B5C30303073}
\@writefile{toc}{\contentsline {chapter}{\numberline {4}Scope Extrusion}{45}{chapter.4}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{lotypederivation}{\addvspace {10\p@ }}
\@writefile{lol}{\addvspace {10\p@ }}
\newlabel{chapter:scope-extrusion}{{4}{45}{Scope Extrusion}{chapter.4}{}}
\newlabel{chapter:scope-extrusion@cref}{{[chapter][4][]4}{[1][45][]45}{}{}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4.1}Properties of Dynamic Scope Extrusion Checks}{45}{section.4.1}\protected@file@percent }
\newlabel{section:properties}{{4.1}{45}{Properties of Dynamic Scope Extrusion Checks}{section.4.1}{}}
\newlabel{section:properties@cref}{{[section][1][4]4.1}{[1][45][]45}{}{}{}}
\zref@newlabel{mdf@pagelabel-14}{\default{4.1}\page{45}\abspage{51}\mdf@pagevalue{45}}
\@writefile{thm}{\contentsline {mddefinition}{{Definition}{4.1.{1}}{Correctness of a Dynamic Scope Extrusion Check}}{45}{mdtheorem.4.1.1}\protected@file@percent }
\BKM@entry{id=29,dest={73656374696F6E2E342E32},srcline={39}}{5C3337365C3337375C3030304C5C303030615C3030307A5C303030795C3030305C3034305C303030445C303030795C3030306E5C303030615C3030306D5C303030695C303030635C3030305C3034305C303030435C303030685C303030655C303030635C3030306B}
\citation{kiselyov-14}
\zref@newlabel{mdf@pagelabel-15}{\default{4.1}\page{46}\abspage{52}\mdf@pagevalue{46}}
\@writefile{thm}{\contentsline {mddefinition}{{Definition}{4.1.{2}}{Permissiveness of a Dynamic Scope Extrusion Check}}{46}{mdtheorem.4.1.2}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {4.2}Lazy Dynamic Check}{46}{section.4.2}\protected@file@percent }
\newlabel{section:lazy-dynamic-check-formal}{{4.2}{46}{Lazy Dynamic Check}{section.4.2}{}}
\newlabel{section:lazy-dynamic-check-formal@cref}{{[section][2][4]4.2}{[1][46][]46}{}{}{}}
\zref@newlabel{mdf@pagelabel-16}{\default{4.2}\page{46}\abspage{52}\mdf@pagevalue{46}}
\@writefile{thm}{\contentsline {mddefinition}{{Definition}{4.2.{1}}{Lazy Scope Extrusion}}{46}{mdtheorem.4.2.1}\protected@file@percent }
\newlabel{def:lazy-scope-extrusion}{{4.2.{1}}{46}{Lazy Dynamic Check}{mdtheorem.4.2.1}{}}
\newlabel{def:lazy-scope-extrusion@cref}{{[definition][1][4,2]4.2.{1}}{[1][46][]46}{}{}{}}
\citation{kiselyov-14}
\BKM@entry{id=30,dest={73656374696F6E2E342E33},srcline={121}}{5C3337365C3337375C303030455C303030615C303030675C303030655C303030725C3030305C3034305C303030445C303030795C3030306E5C303030615C3030306D5C303030695C303030635C3030305C3034305C303030435C303030685C303030655C303030635C3030306B}
\zref@newlabel{mdf@pagelabel-17}{\default{4.2}\page{47}\abspage{53}\mdf@pagevalue{47}}
\@writefile{thm}{\contentsline {mdtheorem}{{Theorem}{4.2.{2}}{Correctness and Permissiveness of the Lazy Dynamic Check}}{47}{mdtheorem.4.2.2}\protected@file@percent }
\zref@newlabel{mdf@pagelabel-18}{\default{4.2}\page{47}\abspage{53}\mdf@pagevalue{47}}
\@writefile{thm}{\contentsline {mddefinition}{{Definition}{4.2.{3}}{Expressiveness of a Dynamic Scope Extrusion Check}}{47}{mdtheorem.4.2.3}\protected@file@percent }
\zref@newlabel{mdf@pagelabel-19}{\default{4.2}\page{47}\abspage{53}\mdf@pagevalue{47}}
\@writefile{thm}{\contentsline {mddefinition}{{Definition}{4.2.{4}}{False Positives of a Dynamic Scope Extrusion Check}}{47}{mdtheorem.4.2.4}\protected@file@percent }
\citation{kiselyov-14}
\@writefile{toc}{\contentsline {section}{\numberline {4.3}Eager Dynamic Check}{48}{section.4.3}\protected@file@percent }
\newlabel{section:eager-dynamic-check-formal}{{4.3}{48}{Eager Dynamic Check}{section.4.3}{}}
\newlabel{section:eager-dynamic-check-formal@cref}{{[section][3][4]4.3}{[1][47][]48}{}{}{}}
\zref@newlabel{mdf@pagelabel-20}{\default{4.3}\page{48}\abspage{54}\mdf@pagevalue{48}}
\@writefile{thm}{\contentsline {mddefinition}{{Definition}{4.3.{1}}{Eager Scope Extrusion}}{48}{mdtheorem.4.3.1}\protected@file@percent }
\newlabel{dfn:eager-scope-extrusion}{{4.3.{1}}{48}{Eager Dynamic Check}{mdtheorem.4.3.1}{}}
\newlabel{dfn:eager-scope-extrusion@cref}{{[definition][1][4,3]4.3.{1}}{[1][48][]48}{}{}{}}
\citation{kiselyov-24}
\BKM@entry{id=31,dest={73756273656374696F6E2E342E332E31},srcline={212}}{5C3337365C3337375C303030435C3030306F5C303030725C303030725C303030655C303030635C303030745C3030306E5C303030655C303030735C303030735C3030305C3034305C3030306F5C303030665C3030305C3034305C303030745C303030685C303030655C3030305C3034305C303030455C303030615C303030675C303030655C303030725C3030305C3034305C303030445C303030795C3030306E5C303030615C3030306D5C303030695C303030635C3030305C3034305C303030435C303030685C303030655C303030635C3030306B}
\@writefile{lol}{\contentsline {listing}{\numberline {13}{\ignorespaces Eager scope extrusion is caused by the $\texttt  {\textbf  {return}} \,\, {y}$ expression. $z$ is bound to $\texttt  {Var}(x_{\mathbb  {N}})$. Scope extrusion is reported when $z$ is used to build a larger AST $\equote [{\splice [z]} + 1]$, in a context where $\texttt  {Var}(x_{\mathbb  {N}})$ is not declared safe}}{49}{listing.13}\protected@file@percent }
\newlabel{listing:eager-scope-extrusion-check-eg}{{13}{49}{Eager scope extrusion is caused by the $\return {y}$ expression. $z$ is bound to $\Var {x}{\mathbb {N}}$. Scope extrusion is reported when $z$ is used to build a larger AST $\equote [{\splice [z]} + 1]$, in a context where $\Var {x}{\mathbb {N}}$ is not declared safe}{listing.13}{}}
\newlabel{listing:eager-scope-extrusion-check-eg@cref}{{[listing][13][]13}{[1][49][]49}{}{}{}}
\@writefile{lol}{\contentsline {listing}{\numberline {14}{\ignorespaces The eager dynamic check additionally checks at top-level splices.}}{49}{listing.14}\protected@file@percent }
\newlabel{listing:eager-scope-extrusion-check-eg-tls}{{14}{49}{The eager dynamic check additionally checks at top-level splices}{listing.14}{}}
\newlabel{listing:eager-scope-extrusion-check-eg-tls@cref}{{[listing][14][]14}{[1][49][]49}{}{}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3.1}Correctness of the Eager Dynamic Check}{49}{subsection.4.3.1}\protected@file@percent }
\newlabel{subsection:eager-dynamic-correctness}{{4.3.1}{49}{Correctness of the Eager Dynamic Check}{subsection.4.3.1}{}}
\newlabel{subsection:eager-dynamic-correctness@cref}{{[subsection][1][4,3]4.3.1}{[1][49][]49}{}{}{}}
\citation{kiselyov-14}
\BKM@entry{id=32,dest={73756273656374696F6E2E342E332E32},srcline={260}}{5C3337365C3337375C303030455C303030785C303030705C303030725C303030655C303030735C303030735C303030695C303030765C303030655C3030306E5C303030655C303030735C303030735C3030305C3034305C3030306F5C303030665C3030305C3034305C303030745C303030685C303030655C3030305C3034305C303030455C303030615C303030675C303030655C303030725C3030305C3034305C303030445C303030795C3030306E5C303030615C3030306D5C303030695C303030635C3030305C3034305C303030435C303030685C303030655C303030635C3030306B}
\@writefile{lol}{\contentsline {listing}{\numberline {15}{\ignorespaces The eager dynamic check does not detect scope extrusion, since $\texttt  {\textbf  {return}} \,\, {y}$ is followed by a non-terminating loop which never refers to $z$.}}{50}{listing.15}\protected@file@percent }
\newlabel{listing:eager-scope-extrusion-unsafe}{{15}{50}{The eager dynamic check does not detect scope extrusion, since $\return {y}$ is followed by a non-terminating loop which never refers to $z$}{listing.15}{}}
\newlabel{listing:eager-scope-extrusion-unsafe@cref}{{[listing][15][]15}{[1][50][]50}{}{}{}}
\@writefile{lol}{\contentsline {listing}{\numberline {16}{\ignorespaces The eager dynamic check additionally does not report eager scope extrusion in the case where the offending AST is discarded.}}{50}{listing.16}\protected@file@percent }
\newlabel{listing:eager-scope-extrusion-unsafe-no-use}{{16}{50}{The eager dynamic check additionally does not report eager scope extrusion in the case where the offending AST is discarded}{listing.16}{}}
\newlabel{listing:eager-scope-extrusion-unsafe-no-use@cref}{{[listing][16][]16}{[1][50][]50}{}{}{}}
\@writefile{lol}{\contentsline {listing}{\numberline {17}{\ignorespaces The eager dynamic check additionally does not report cases where the offending AST is used, but only in safe ways. In this case, the continuation restores the context that permits $\texttt  {Var}(x_{\mathbb  {N}})$ to be used.}}{50}{listing.17}\protected@file@percent }
\newlabel{listing:eager-scope-extrusion-unsafe-continue}{{17}{50}{The eager dynamic check additionally does not report cases where the offending AST is used, but only in safe ways. In this case, the continuation restores the context that permits $\Var {x}{\mathbb {N}}$ to be used}{listing.17}{}}
\newlabel{listing:eager-scope-extrusion-unsafe-continue@cref}{{[listing][17][]17}{[1][50][]50}{}{}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3.2}Expressiveness of the Eager Dynamic Check}{50}{subsection.4.3.2}\protected@file@percent }
\newlabel{subsection:eager-dynamic-expressiveness}{{4.3.2}{50}{Expressiveness of the Eager Dynamic Check}{subsection.4.3.2}{}}
\newlabel{subsection:eager-dynamic-expressiveness@cref}{{[subsection][2][4,3]4.3.2}{[1][50][]50}{}{}{}}
\@writefile{lol}{\contentsline {listing}{\numberline {18}{\ignorespaces A program which fails the eager dynamic check. The offending AST ($\texttt  {Var}(x_{\mathbb  {N}})$) is used to construct a larger AST in a way that appears to be unsafe $\equote [{\splice [y]+\texttt  {0}}]$, but the unsafe AST is then only used in a safe way.}}{50}{listing.18}\protected@file@percent }
\newlabel{listing:eager-scope-extrusion-looks-unsafe}{{18}{50}{A program which fails the eager dynamic check. The offending AST ($\Var {x}{\mathbb {N}}$) is used to construct a larger AST in a way that appears to be unsafe $\equote [{\splice [y]+\texttt {0}}]$, but the unsafe AST is then only used in a safe way}{listing.18}{}}
\newlabel{listing:eager-scope-extrusion-looks-unsafe@cref}{{[listing][18][]18}{[1][50][]50}{}{}{}}
\citation{levy-2003}
\BKM@entry{id=33,dest={73756273656374696F6E2E342E332E33},srcline={290}}{5C3337365C3337375C303030455C303030665C303030665C303030695C303030635C303030695C303030655C3030306E5C303030635C303030795C3030305C3034305C3030306F5C303030665C3030305C3034305C303030745C303030685C303030655C3030305C3034305C303030455C303030615C303030675C303030655C303030725C3030305C3034305C303030445C303030795C3030306E5C303030615C3030306D5C303030695C303030635C3030305C3034305C303030435C303030685C303030655C303030635C3030306B}
\BKM@entry{id=34,dest={73656374696F6E2E342E34},srcline={293}}{5C3337365C3337375C303030425C303030655C303030735C303030745C3030302D5C303030455C303030665C303030665C3030306F5C303030725C303030745C3030305C3034305C303030445C303030795C3030306E5C303030615C3030306D5C303030695C303030635C3030305C3034305C303030435C303030685C303030655C303030635C3030306B}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3.3}Efficiency of the Eager Dynamic Check}{51}{subsection.4.3.3}\protected@file@percent }
\newlabel{subsection:eager-dynamic-efficiency}{{4.3.3}{51}{Efficiency of the Eager Dynamic Check}{subsection.4.3.3}{}}
\newlabel{subsection:eager-dynamic-efficiency@cref}{{[subsection][3][4,3]4.3.3}{[1][51][]51}{}{}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4.4}Best-Effort Dynamic Check}{51}{section.4.4}\protected@file@percent }
\newlabel{section:best-effort-check}{{4.4}{51}{Best-Effort Dynamic Check}{section.4.4}{}}
\newlabel{section:best-effort-check@cref}{{[section][4][4]4.4}{[1][51][]51}{}{}{}}
\zref@newlabel{mdf@pagelabel-21}{\default{4.4}\page{52}\abspage{58}\mdf@pagevalue{52}}
\@writefile{thm}{\contentsline {mddefinition}{{Definition}{4.4.{1}}{Best-Effort Scope Extrusion}}{52}{mdtheorem.4.4.1}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {4.1}{\ignorespaces The result of elaborating \Cref  {listing:eager-scope-extrusion-looks-unsafe} using the eager check}}{52}{figure.4.1}\protected@file@percent }
\newlabel{fig:core-eager-looks-unsafe}{{4.1}{52}{The result of elaborating \Cref {listing:eager-scope-extrusion-looks-unsafe} using the eager check}{figure.4.1}{}}
\newlabel{fig:core-eager-looks-unsafe@cref}{{[figure][1][4]4.1}{[1][52][]52}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.2}{\ignorespaces \Cref  {fig:core-eager-looks-unsafe}, but with $\textbf  {\texttt  {check}}_M$ in place of $\textbf  {\texttt  {check}}$}}{53}{figure.4.2}\protected@file@percent }
\newlabel{fig:core-eager-looks-unsafe-M}{{4.2}{53}{\Cref {fig:core-eager-looks-unsafe}, but with $\textbf {\texttt {check}}_M$ in place of $\textbf {\texttt {check}}$}{figure.4.2}{}}
\newlabel{fig:core-eager-looks-unsafe-M@cref}{{[figure][2][4]4.2}{[1][53][]53}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.3}{\ignorespaces An illustration of when variables are unmuted. The stack, $E$, grows rightwards. Effects (e.g. \textbf  {\texttt  {op}}, in \textbf  {\textcolor {selected}{blue}}) are caught by a handler (\textbf  {\textcolor {darkgrey}{dark grey}}), capturing a portion of the stack (\textbf  {\textcolor {lightgrey}{light grey}}). We track the length of the stack, in \textbf  {white}, that is never captured by an operation in this fashion. Frames in \textbf  {white} are never able to resume a continuation.}}{54}{figure.4.3}\protected@file@percent }
\newlabel{fig:unmute-variables-algo}{{4.3}{54}{An illustration of when variables are unmuted. The stack, $E$, grows rightwards. Effects (e.g. \textbf {\texttt {op}}, in \textbf {\textcolor {selected}{blue}}) are caught by a handler (\textbf {\textcolor {darkgrey}{dark grey}}), capturing a portion of the stack (\textbf {\textcolor {lightgrey}{light grey}}). We track the length of the stack, in \textbf {white}, that is never captured by an operation in this fashion. Frames in \textbf {white} are never able to resume a continuation}{figure.4.3}{}}
\newlabel{fig:unmute-variables-algo@cref}{{[figure][3][4]4.3}{[1][53][]54}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.4}{\ignorespaces A $\lambda _{\texttt  {AST}(\texttt  {op})}${} program that generates the AST of $\lambda z. \, (\lambda x. \, x + \texttt  {0}) (\texttt  {1})$. It is coloured using the convention of \Cref  {fig:unmute-variables-algo}.}}{54}{figure.4.4}\protected@file@percent }
\newlabel{fig:core-unmute-example}{{4.4}{54}{A \coreLang {} program that generates the AST of $\lambda z. \, (\lambda x. \, x + \texttt {0}) (\texttt {1})$. It is coloured using the convention of \Cref {fig:unmute-variables-algo}}{figure.4.4}{}}
\newlabel{fig:core-unmute-example@cref}{{[figure][4][4]4.4}{[1][53][]54}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.5}{\ignorespaces The result of reducing \Cref  {fig:core-unmute-example}. It is now safe to unmute variables.}}{54}{figure.4.5}\protected@file@percent }
\newlabel{fig:core-unmute-example-result}{{4.5}{54}{The result of reducing \Cref {fig:core-unmute-example}. It is now safe to unmute variables}{figure.4.5}{}}
\newlabel{fig:core-unmute-example-result@cref}{{[figure][5][4]4.5}{[1][53][]54}{}{}{}}
\BKM@entry{id=35,dest={73756273656374696F6E2E342E342E31},srcline={491}}{5C3337365C3337375C303030435C3030306F5C303030725C303030725C303030655C303030635C303030745C3030306E5C303030655C303030735C303030735C3030305C3034305C3030306F5C303030665C3030305C3034305C303030745C303030685C303030655C3030305C3034305C303030425C303030655C303030735C303030745C3030302D5C303030455C303030665C303030665C3030306F5C303030725C303030745C3030305C3034305C303030445C303030795C3030306E5C303030615C3030306D5C303030695C303030635C3030305C3034305C303030435C303030685C303030655C303030635C3030306B}
\BKM@entry{id=36,dest={73756273656374696F6E2E342E342E32},srcline={498}}{5C3337365C3337375C303030455C303030785C303030705C303030725C303030655C303030735C303030735C303030695C303030765C303030655C3030306E5C303030655C303030735C303030735C3030305C3034305C3030306F5C303030665C3030305C3034305C303030745C303030685C303030655C3030305C3034305C303030425C303030655C303030735C303030745C3030302D5C303030455C303030665C303030665C3030306F5C303030725C303030745C3030305C3034305C303030445C303030795C3030306E5C303030615C3030306D5C303030695C303030635C3030305C3034305C303030435C303030685C303030655C303030635C3030306B}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4.1}Correctness of the Best-Effort Dynamic Check}{55}{subsection.4.4.1}\protected@file@percent }
\newlabel{subsection:best-effort-correct}{{4.4.1}{55}{Correctness of the Best-Effort Dynamic Check}{subsection.4.4.1}{}}
\newlabel{subsection:best-effort-correct@cref}{{[subsection][1][4,4]4.4.1}{[1][55][]55}{}{}{}}
\zref@newlabel{mdf@pagelabel-22}{\default{4.4.1}\page{55}\abspage{61}\mdf@pagevalue{55}}
\@writefile{thm}{\contentsline {mdtheorem}{{Theorem}{4.4.{2}}{Correctness of the Best-Effort Check}}{55}{mdtheorem.4.4.2}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4.2}Expressiveness of the Best-Effort Dynamic Check}{55}{subsection.4.4.2}\protected@file@percent }
\newlabel{subsection:best-effort-expressive}{{4.4.2}{55}{Expressiveness of the Best-Effort Dynamic Check}{subsection.4.4.2}{}}
\newlabel{subsection:best-effort-expressive@cref}{{[subsection][2][4,4]4.4.2}{[1][55][]55}{}{}{}}
\@writefile{lol}{\contentsline {listing}{\numberline {19}{\ignorespaces The best-effort check reports false positives. This program attempts to build the AST $\lambda x.\texttt  {\textbf  {return}} \,\, {y}$, where $y$ has extruded its scope, but then throws it away, returning the AST of $\texttt  {1}$.}}{55}{listing.19}\protected@file@percent }
\newlabel{listing:best-effort-imperfect}{{19}{55}{The best-effort check reports false positives. This program attempts to build the AST $\lambda x.\return {y}$, where $y$ has extruded its scope, but then throws it away, returning the AST of $\texttt {1}$}{listing.19}{}}
\newlabel{listing:best-effort-imperfect@cref}{{[listing][19][]19}{[1][55][]55}{}{}{}}
\BKM@entry{id=37,dest={73756273656374696F6E2E342E342E33},srcline={538}}{5C3337365C3337375C303030455C303030665C303030665C303030695C303030635C303030695C303030655C3030306E5C303030635C303030795C3030305C3034305C3030306F5C303030665C3030305C3034305C303030745C303030685C303030655C3030305C3034305C303030425C303030655C303030735C303030745C3030302D5C303030455C303030665C303030665C3030306F5C303030725C303030745C3030305C3034305C303030445C303030795C3030306E5C303030615C3030306D5C303030695C303030635C3030305C3034305C303030435C303030685C303030655C303030635C3030306B}
\BKM@entry{id=38,dest={73656374696F6E2E342E35},srcline={543}}{5C3337365C3337375C303030525C303030655C303030665C303030695C3030306E5C303030655C303030645C3030305C3034305C303030455C3030306E5C303030765C303030695C303030725C3030306F5C3030306E5C3030306D5C303030655C3030306E5C303030745C3030305C3034305C303030435C3030306C5C303030615C303030735C303030735C303030695C303030665C303030695C303030655C303030725C30303073}
\citation{isoda-24}
\zref@newlabel{mdf@pagelabel-23}{\default{4.4.2}\page{56}\abspage{62}\mdf@pagevalue{56}}
\@writefile{thm}{\contentsline {mdtheorem}{{Theorem}{4.4.{3}}{Cause for Concern Property}}{56}{mdtheorem.4.4.3}\protected@file@percent }
\newlabel{thm:best-effort-cause-for-concern}{{4.4.{3}}{56}{Expressiveness of the Best-Effort Dynamic Check}{mdtheorem.4.4.3}{}}
\newlabel{thm:best-effort-cause-for-concern@cref}{{[mdtheorem][3][4,4]4.4.{3}}{[1][56][]56}{}{}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4.3}Efficiency of the Best-Effort Dynamic Check}{56}{subsection.4.4.3}\protected@file@percent }
\newlabel{subsection:best-effort-efficient}{{4.4.3}{56}{Efficiency of the Best-Effort Dynamic Check}{subsection.4.4.3}{}}
\newlabel{subsection:best-effort-efficient@cref}{{[subsection][3][4,4]4.4.3}{[1][56][]56}{}{}{}}
\citation{isoda-24}
\citation{isoda-24}
\citation{isoda-24}
\@writefile{lof}{\contentsline {figure}{\numberline {4.6}{\ignorespaces $\lambda _{\equote [\texttt  {op}]}$$^{\gamma }${} types. The only change from $\lambda _{\equote [\texttt  {op}]}${} is that \textsf  {Code} types are now annotated with an environment classifier $\gamma $, which is \textbf  {\colorbox {yellow}{highlighted}}.}}{57}{figure.4.6}\protected@file@percent }
\newlabel{fig:rec-source-types}{{4.6}{57}{\recLang {} types. The only change from \sourceLang {} is that \textsf {Code} types are now annotated with an environment classifier $\gamma $, which is \textbf {\hl {highlighted}}}{figure.4.6}{}}
\newlabel{fig:rec-source-types@cref}{{[figure][6][4]4.6}{[1][57][]57}{}{}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4.5}Refined Environment Classifiers}{57}{section.4.5}\protected@file@percent }
\newlabel{section:refined-environment-classifiers-formal}{{4.5}{57}{Refined Environment Classifiers}{section.4.5}{}}
\newlabel{section:refined-environment-classifiers-formal@cref}{{[section][5][4]4.5}{[1][56][]57}{}{}{}}
\zref@newlabel{mdf@pagelabel-24}{\default{4.5}\page{57}\abspage{63}\mdf@pagevalue{57}}
\@writefile{thm}{\contentsline {mddefinition}{{Definition}{4.5.{1}}{Extended \recLang {} type}}{57}{mdtheorem.4.5.1}\protected@file@percent }
\newlabel{dfn:extended-source-type}{{4.5.{1}}{57}{Refined Environment Classifiers}{mdtheorem.4.5.1}{}}
\newlabel{dfn:extended-source-type@cref}{{[definition][1][4,5]4.5.{1}}{[1][57][]57}{}{}{}}
\citation{isoda-24}
\citation{isoda-24}
\citation{yallop-2019}
\citation{isoda-24}
\citation{isoda-24}
\citation{tait-67}
\zref@newlabel{mdf@pagelabel-25}{\default{4.5}\page{58}\abspage{64}\mdf@pagevalue{58}}
\@writefile{thm}{\contentsline {mddefinition}{{Definition}{4.5.{2}}{Well-typed closed expression}}{58}{mdtheorem.4.5.2}\protected@file@percent }
\newlabel{dfn:well-typed-exp-rec}{{4.5.{2}}{58}{Refined Environment Classifiers}{mdtheorem.4.5.2}{}}
\newlabel{dfn:well-typed-exp-rec@cref}{{[definition][2][4,5]4.5.{2}}{[1][57][]58}{}{}{}}
\zref@newlabel{mdf@pagelabel-26}{\default{4.5}\page{58}\abspage{64}\mdf@pagevalue{58}}
\@writefile{thm}{\contentsline {mddefinition}{{Definition}{4.5.{3}}{Well-Formed Level $-1$ Type}}{58}{mdtheorem.4.5.3}\protected@file@percent }
\newlabel{dfn:well-typed-exp-rec}{{4.5.{3}}{58}{Refined Environment Classifiers}{mdtheorem.4.5.3}{}}
\newlabel{dfn:well-typed-exp-rec@cref}{{[definition][3][4,5]4.5.{3}}{[1][58][]58}{}{}{}}
\@writefile{lol}{\contentsline {listing}{\numberline {20}{\ignorespaces The program uses handlers to perform let-insertion, generating $(\lambda z. z + z)(e)$ rather than $e + e$. It is hard to type this in $\lambda _{\equote [\texttt  {op}]}$$^{\gamma }${} without polymorphism.}}{58}{listing.20}\protected@file@percent }
\newlabel{listing:refined-environment-classifiers-let-insertion}{{20}{58}{The program uses handlers to perform let-insertion, generating $(\lambda z. z + z)(e)$ rather than $e + e$. It is hard to type this in \recLang {} without polymorphism}{listing.20}{}}
\newlabel{listing:refined-environment-classifiers-let-insertion@cref}{{[listing][20][]20}{[1][58][]58}{}{}{}}
\citation{isoda-24}
\citation{kammar-2013}
\citation{isoda-24}
\citation{isoda-24}
\citation{isoda-24}
\citation{isoda-24}
\BKM@entry{id=39,dest={73756273656374696F6E2E342E352E31},srcline={757}}{}
\citation{benton-09}
\citation{plotkin-2025}
\citation{kuchta-2023}
\citation{plotkin-2025}
\citation{kuchta-2023}
\zref@newlabel{mdf@pagelabel-27}{\default{4.5}\page{59}\abspage{65}\mdf@pagevalue{59}}
\@writefile{thm}{\contentsline {mdlemma}{{Lemma}{4.5.{4}}{Weakening for Level 0 Values}}{59}{mdtheorem.4.5.4}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {4.5.1}Correctness of Refined Environment Classifiers}{59}{subsection.4.5.1}\protected@file@percent }
\newlabel{subsection:rec-formal-correctness}{{4.5.1}{59}{Correctness of Refined Environment Classifiers}{subsection.4.5.1}{}}
\newlabel{subsection:rec-formal-correctness@cref}{{[subsection][1][4,5]4.5.1}{[1][59][]59}{}{}{}}
\zref@newlabel{mdf@pagelabel-28}{\default{4.5.1}\page{59}\abspage{65}\mdf@pagevalue{59}}
\@writefile{thm}{\contentsline {mdtheorem}{{Theorem}{4.5.{5}}{Correctness of Refined Environment Classifiers}}{59}{mdtheorem.4.5.5}\protected@file@percent }
\newlabel{thm:refined-env-classifiers-correct}{{4.5.{5}}{59}{Correctness of Refined Environment Classifiers}{mdtheorem.4.5.5}{}}
\newlabel{thm:refined-env-classifiers-correct@cref}{{[mdtheorem][5][4,5]4.5.{5}}{[1][59][]59}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.7}{\ignorespaces Selected typing rules for refined environment classifiers. The \textbf  {\textsf  {\textcolor {compile}{c}}}{}$\mid $\textbf  {\textsf  {\textcolor {quote}{q}}}{}-\textsc  {Lambda} rule corresponds to \textsc  {C-Abs} in the refined environment classifier literature. Following \citeauthor  {isoda-24}, handlers and continuations are restricted to \textsf  {Code} types; However, unlike \citeauthor  {isoda-24}'s system, typing rules are not polymorphic over classifiers.}}{60}{figure.4.7}\protected@file@percent }
\newlabel{fig:refined-env-classifiers-source-typing-rules}{{4.7}{60}{Selected typing rules for refined environment classifiers. The \compilemode {}$\mid $\quotemode {}-\textsc {Lambda} rule corresponds to \textsc {C-Abs} in the refined environment classifier literature. Following \citeauthor {isoda-24}, handlers and continuations are restricted to \textsf {Code} types; However, unlike \citeauthor {isoda-24}'s system, typing rules are not polymorphic over classifiers}{figure.4.7}{}}
\newlabel{fig:refined-env-classifiers-source-typing-rules@cref}{{[figure][7][4]4.7}{[1][59][]60}{}{}{}}
\citation{plotkin-2025}
\citation{kuchta-2023}
\citation{kuchta-2023}
\zref@newlabel{mdf@pagelabel-29}{\default{4.5.1}\page{61}\abspage{67}\mdf@pagevalue{61}}
\@writefile{thm}{\contentsline {mddefinition}{{Definition}{4.5.{6}}{\textsf {Scoped}-Induction}}{61}{mdtheorem.4.5.6}\protected@file@percent }
\zref@newlabel{mdf@pagelabel-30}{\default{4.5.1}\page{61}\abspage{67}\mdf@pagevalue{61}}
\@writefile{thm}{\contentsline {mdlemma}{{Lemma}{4.5.{7}}{Closure under Anti-Reduction}}{61}{mdtheorem.4.5.7}\protected@file@percent }
\newlabel{lemma:closure-reduction}{{4.5.{7}}{61}{Correctness of Refined Environment Classifiers}{mdtheorem.4.5.7}{}}
\newlabel{lemma:closure-reduction@cref}{{[lemma][7][4,5]4.5.{7}}{[1][61][]61}{}{}{}}
\zref@newlabel{mdf@pagelabel-31}{\default{4.5.1}\page{61}\abspage{67}\mdf@pagevalue{61}}
\@writefile{thm}{\contentsline {mddefinition}{{Definition}{4.5.{8}}{Closed substitution}}{61}{mdtheorem.4.5.8}\protected@file@percent }
\newlabel{dfn:closed-substitution}{{4.5.{8}}{61}{Correctness of Refined Environment Classifiers}{mdtheorem.4.5.8}{}}
\newlabel{dfn:closed-substitution@cref}{{[definition][8][4,5]4.5.{8}}{[1][61][]61}{}{}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.8}{\ignorespaces The definition of the \textsf  {Scoped} logical relation. Most definitions are standard. The logical relation on terms is defined as a least fixed point, following the definitions by \citet  {plotkin-2025} and \citet  {kuchta-2023}.}}{62}{figure.4.8}\protected@file@percent }
\newlabel{fig:logical-relation-defn}{{4.8}{62}{The definition of the \textsf {Scoped} logical relation. Most definitions are standard. The logical relation on terms is defined as a least fixed point, following the definitions by \citet {plotkin-2025} and \citet {kuchta-2023}}{figure.4.8}{}}
\newlabel{fig:logical-relation-defn@cref}{{[figure][8][4]4.8}{[1][59][]62}{}{}{}}
\BKM@entry{id=40,dest={73756273656374696F6E2E342E352E32},srcline={881}}{}
\zref@newlabel{mdf@pagelabel-32}{\default{4.5.1}\page{63}\abspage{69}\mdf@pagevalue{63}}
\zref@newlabel{mdf@pagelabel-33}{\default{4.5.1}\page{63}\abspage{69}\mdf@pagevalue{63}}
\@writefile{thm}{\contentsline {mdlemma}{{Lemma}{4.5.{9}}{Fundamental Lemma {[\compilemode {}, {$\effectType [\Delta ; \xi ]{T^0}$}]} of the \textsf {Scoped} Logical Relation}}{63}{mdtheorem.4.5.9}\protected@file@percent }
\newlabel{lemma:fundamental}{{4.5.{9}}{63}{Correctness of Refined Environment Classifiers}{mdtheorem.4.5.9}{}}
\newlabel{lemma:fundamental@cref}{{[lemma][9][4,5]4.5.{9}}{[1][63][]63}{}{}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.5.2}Expressiveness of Refined Environment Classifiers}{63}{subsection.4.5.2}\protected@file@percent }
\newlabel{subsection:rec-formal-expressiveness}{{4.5.2}{63}{Expressiveness of Refined Environment Classifiers}{subsection.4.5.2}{}}
\newlabel{subsection:rec-formal-expressiveness@cref}{{[subsection][2][4,5]4.5.2}{[1][63][]63}{}{}{}}
\BKM@entry{id=41,dest={73656374696F6E2E342E36},srcline={908}}{5C3337365C3337375C303030455C303030765C303030615C3030306C5C303030755C303030615C303030745C303030695C3030306F5C3030306E5C3030305C3034305C3030306F5C303030665C3030305C3034305C3030304C5C303030615C3030306D5C303030625C303030645C303030615C3030302D5C3030304F5C303030705C3030302D5C303030515C303030755C3030306F5C303030745C303030655C3030302D5C303030535C303030705C3030306C5C303030695C303030635C30303065}
\citation{isoda-24}
\citation{isoda-24}
\@writefile{lot}{\contentsline {table}{\numberline {4.1}{\ignorespaces Summarising expressiveness w.r.t litmus tests. \citeauthor  {isoda-24}'s system should be able to express \Cref  {listing:refined-environment-classifiers-let-insertion}, but $\lambda _{\equote [\texttt  {op}]}$$^{\gamma }${} cannot, and thus it is marked with a \textbf  {\textcolor {compile}{\sffamily  ?}}.}}{64}{table.4.1}\protected@file@percent }
\newlabel{table:expressiveness-comparison}{{4.1}{64}{Summarising expressiveness w.r.t litmus tests. \citeauthor {isoda-24}'s system should be able to express \Cref {listing:refined-environment-classifiers-let-insertion}, but \recLang {} cannot, and thus it is marked with a \maybe }{table.4.1}{}}
\newlabel{table:expressiveness-comparison@cref}{{[table][1][4]4.1}{[1][64][]64}{}{}{}}
\@writefile{lol}{\contentsline {listing}{\numberline {21}{\ignorespaces The typing rules for refined environment classifiers forbid any program which attempts to extrude some potentially unsafe variable $x$ to a handler.}}{64}{listing.21}\protected@file@percent }
\newlabel{listing:refined-environment-classifiers-expressiveness}{{21}{64}{The typing rules for refined environment classifiers forbid any program which attempts to extrude some potentially unsafe variable $x$ to a handler}{listing.21}{}}
\newlabel{listing:refined-environment-classifiers-expressiveness@cref}{{[listing][21][]21}{[1][64][]64}{}{}{}}
\@writefile{lol}{\contentsline {listing}{\numberline {22}{\ignorespaces Refined environment classifiers allow variables to be passed to an effects, so long as the variable can never cause a scope extrusion error (e.g. $z$).}}{64}{listing.22}\protected@file@percent }
\newlabel{listing:refined-environment-classifiers-safe}{{22}{64}{Refined environment classifiers allow variables to be passed to an effects, so long as the variable can never cause a scope extrusion error (e.g. $z$)}{listing.22}{}}
\newlabel{listing:refined-environment-classifiers-safe@cref}{{[listing][22][]22}{[1][64][]64}{}{}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4.6}Evaluation of $\lambda _{\equote [\texttt  {op}]}${}}{64}{section.4.6}\protected@file@percent }
\newlabel{section:evaluation}{{4.6}{64}{Evaluation of \texorpdfstring {\sourceLang {}}{Lambda-Op-Quote-Splice}}{section.4.6}{}}
\newlabel{section:evaluation@cref}{{[section][6][4]4.6}{[1][64][]64}{}{}{}}
\BKM@entry{id=42,dest={636861707465722E35},srcline={1}}{5C3337365C3337375C303030435C3030306F5C3030306E5C303030635C3030306C5C303030755C303030735C303030695C3030306F5C3030306E}
\citation{kiselyov-14}
\citation{kiselyov-16}
\BKM@entry{id=43,dest={73656374696F6E2E352E31},srcline={15}}{5C3337365C3337375C3030304C5C303030695C3030306D5C303030695C303030745C303030615C303030745C303030695C3030306F5C3030306E5C303030735C3030305C3034305C303030615C3030306E5C303030645C3030305C3034305C303030465C303030755C303030745C303030755C303030725C303030655C3030305C3034305C303030575C3030306F5C303030725C3030306B}
\citation{yallop-2019}
\citation{isoda-24}
\bibdata{library}
\@writefile{toc}{\contentsline {chapter}{\numberline {5}Conclusion}{65}{chapter.5}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{lotypederivation}{\addvspace {10\p@ }}
\@writefile{lol}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {5.1}Limitations and Future Work}{65}{section.5.1}\protected@file@percent }
\bibcite{abrahams-04}{{1}{2004}{{Abrahams and Gurtovoy}}{{}}}
\bibcite{bauer-2014}{{2}{2014}{{Bauer and Pretnar}}{{}}}
\bibcite{benton-09}{{3}{2009}{{Benton and Hur}}{{}}}
\bibcite{biernacki-2017}{{4}{2017}{{Biernacki et~al.}}{{Biernacki, Pir\'{o}g, Polesiuk, and Sieczkowski}}}
\bibcite{calcagno-00}{{5}{2000}{{Calcagno et~al.}}{{Calcagno, Moggi, and Taha}}}
\bibcite{calcagno-2003}{{6}{2003}{{Calcagno et~al.}}{{Calcagno, Taha, Huang, and Leroy}}}
\bibcite{chiang-2024}{{7}{2024}{{Chiang et~al.}}{{Chiang, Yallop, White, and Xie}}}
\bibcite{felleisen-87}{{8}{1987}{{Felleisen and Friedman}}{{}}}
\bibcite{hillestrom-2018}{{9}{2018}{{Hillerstr{\"o}m and Lindley}}{{}}}
\bibcite{huceke-memcpy}{{10}{}{{huceke}}{{}}}
\bibcite{inoue-2012}{{11}{2012}{{Inoue and Taha}}{{}}}
\bibcite{isoda-24}{{12}{2024}{{Isoda et~al.}}{{Isoda, Yokoyama, and Kameyama}}}
\bibcite{jax-grad-metaprogramming}{{13}{}{{Jax-Ml}}{{}}}
\bibcite{kammar-2013}{{14}{2013}{{Kammar et~al.}}{{Kammar, Lindley, and Oury}}}
\bibcite{kiselyov-2012}{{15}{2012}{{Kiselyov}}{{}}}
\bibcite{kiselyov-14}{{16}{2014}{{Kiselyov}}{{}}}
\bibcite{kiselyov-2024}{{17}{2024{}}{{Kiselyov}}{{}}}
\bibcite{kiselyov-24}{{18}{2024{}}{{Kiselyov}}{{}}}
\bibcite{kiselyov-16}{{19}{2016}{{Kiselyov et~al.}}{{Kiselyov, Kameyama, and Sudo}}}
\bibcite{kuchta-2023}{{20}{2023}{{Kuchta}}{{}}}
\bibcite{lawall-94}{{21}{1994}{{Lawall and Danvy}}{{}}}
\bibcite{levy-2003}{{22}{2003}{{Levy et~al.}}{{Levy, Power, and Thielecke}}}
\bibcite{phipps-costin-2023}{{23}{2023}{{Phipps-Costin et~al.}}{{Phipps-Costin, Rossberg, Guha, Leijen, Hillerstr\"{o}m, Sivaramakrishnan, Pretnar, and Lindley}}}
\bibcite{plotkin-2025}{{24}{2025}{{Plotkin and Xie}}{{}}}
\bibcite{pretnar-15}{{25}{2015}{{Pretnar}}{{}}}
\bibcite{rice-53}{{26}{1953}{{Rice}}{{}}}
\bibcite{robinson-01}{{27}{2001}{{Robison}}{{}}}
\bibcite{scherer-2017}{{28}{2017}{{Scherer}}{{}}}
\bibcite{servetto-2013}{{29}{2013}{{Servetto and Zucca}}{{}}}
\bibcite{sheard-02}{{30}{2002}{{Sheard and Jones}}{{}}}
\bibcite{sivaramakrishnan-21}{{31}{2021}{{Sivaramakrishnan et~al.}}{{Sivaramakrishnan, Dolan, White, Kelly, Jaffer, and Madhavapeddy}}}
\bibcite{tait-67}{{32}{1967}{{Tait}}{{}}}
\bibcite{tratt-2008}{{33}{2008}{{Tratt}}{{}}}
\bibcite{vandebon-2021}{{34}{2021}{{Vandebon et~al.}}{{Vandebon, Coutinho, Luk, and Nurvitadhi}}}
\bibcite{taha-1999}{{35}{1999}{{Walid}}{{}}}
\bibcite{wickham-2019}{{36}{2019}{{Wickham}}{{}}}
\bibcite{xie-2022}{{37}{2022}{{Xie et~al.}}{{Xie, Cong, Ikemori, and Leijen}}}
\bibcite{xie-2023}{{38}{2023}{{Xie et~al.}}{{Xie, White, Nicole, and Yallop}}}
\bibcite{yallop-2019}{{39}{2019}{{Yallop and Kiselyov}}{{}}}
\bibcite{yallop-2023}{{40}{2023}{{Yallop et~al.}}{{Yallop, Xie, and Krishnaswami}}}
\BKM@entry{id=44,dest={617070656E6469782E41},srcline={2}}{5C3337365C3337375C303030415C303030755C303030785C303030695C3030306C5C303030695C303030615C303030725C303030795C3030305C3034305C303030445C303030655C303030665C303030695C3030306E5C303030695C303030745C303030695C3030306F5C3030306E5C30303073}
\BKM@entry{id=45,dest={73656374696F6E2E412E31},srcline={4}}{5C3337365C3337375C303030455C303030725C303030615C303030735C30303065}
\@writefile{toc}{\contentsline {chapter}{\numberline {A}Auxiliary Definitions}{70}{appendix.A}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{lotypederivation}{\addvspace {10\p@ }}
\@writefile{lol}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {A.1}Erase}{70}{section.A.1}\protected@file@percent }
\newlabel{appendix:auxiliary-erase}{{A.1}{70}{Erase}{section.A.1}{}}
\newlabel{appendix:auxiliary-erase@cref}{{[appendix][1][1]A.1}{[1][70][]70}{}{}{}}
\BKM@entry{id=46,dest={617070656E6469782E42},srcline={1}}{5C3337365C3337375C3030304C5C303030695C303030745C3030306D5C303030755C303030735C3030305C3034305C303030545C303030655C303030735C303030745C30303073}
\BKM@entry{id=47,dest={73656374696F6E2E422E31},srcline={3}}{5C3337365C3337375C3030304D5C303030655C303030745C303030615C3030304F5C303030435C303030615C3030306D5C3030306C}
\@writefile{toc}{\contentsline {chapter}{\numberline {B}Litmus Tests}{71}{appendix.B}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{lotypederivation}{\addvspace {10\p@ }}
\@writefile{lol}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {B.1}MetaOCaml}{71}{section.B.1}\protected@file@percent }
\newlabel{section:metaocaml-litmustests}{{B.1}{71}{MetaOCaml}{section.B.1}{}}
\newlabel{section:metaocaml-litmustests@cref}{{[appendix][1][2]B.1}{[1][71][]71}{}{}{}}
\@writefile{lol}{\contentsline {listing}{\numberline {23}{\ignorespaces \Cref  {listing:eager-scope-extrusion-check-eg}, transcribed in MetaOCaml}}{71}{listing.23}\protected@file@percent }
\newlabel{}{{23}{71}{\Cref {listing:eager-scope-extrusion-check-eg}, transcribed in MetaOCaml}{listing.23}{}}
\newlabel{@cref}{{[listing][23][]23}{[1][71][]71}{}{}{}}
\@writefile{lol}{\contentsline {listing}{\numberline {24}{\ignorespaces \Cref  {listing:eager-scope-extrusion-check-eg-tls}, transcribed in MetaOCaml}}{71}{listing.24}\protected@file@percent }
\@writefile{lol}{\contentsline {listing}{\numberline {25}{\ignorespaces \Cref  {listing:eager-scope-extrusion-unsafe-no-use}, transcribed in MetaOCaml}}{71}{listing.25}\protected@file@percent }
\@writefile{lol}{\contentsline {listing}{\numberline {26}{\ignorespaces \Cref  {listing:eager-scope-extrusion-unsafe-continue}, transcribed in MetaOCaml}}{71}{listing.26}\protected@file@percent }
\@writefile{lol}{\contentsline {listing}{\numberline {27}{\ignorespaces \Cref  {listing:eager-scope-extrusion-looks-unsafe}, transcribed in MetaOCaml}}{72}{listing.27}\protected@file@percent }
\global\csname @altsecnumformattrue\endcsname
\xdef \mintedoldcachechecksum{\detokenize{5E0A2161E5E1F8E77FAF913A295B9569:104}}
\global\@namedef{scr@dte@chapter@lastmaxnumwidth}{17.7461pt}
\global\@namedef{scr@dte@section@lastmaxnumwidth}{25.83592pt}
\global\@namedef{scr@dte@subsection@lastmaxnumwidth}{31.79993pt}
\@writefile{toc}{\providecommand\tocbasic@end@toc@file{}\tocbasic@end@toc@file}
\gdef \@abspage@last{78}
